<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Web chat</title>
</head>

<body>
    <div>
        <input type="text" id="nickname" placeholder="nickname" data-testid="nickname-box">
        <button type="button" id="btn-save" data-testid="nickname-button">Salvar</button>
    </div>
    <div>
        <h3>Online</h3>
        <ul id="usersOnline">
            
        </ul>
    </div>
    <div id="chat">
        <h3>Chat</h3>
        <% messages.forEach((msg) => { %>
          <p data-testid="message"><%= msg %></p>
        <% }) %>
    </div>
    <div>
        <input type="text" id="input-msg" data-testid="message-box">
        <button type="button" id="send-msg" data-testid="send-button">Enviar</button>
    </div>

    <script src='/socket.io/socket.io.js'></script>
    <!-- <script src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js'></script> -->
</body>
<script>
    const socket = window.io();

    const ulChat = document.querySelector('#chat');
    const inputMsg = document.querySelector('#input-msg');
    const btnSendMessage = document.querySelector('#send-msg');

    const usersOnline = document.querySelector('#usersOnline');
    const inputNick = document.querySelector('#nickname');
    const btnSave = document.querySelector('#btn-save');

    let onlineUsers = [];

    function sendNewMessage() {
        const chatMessage = inputMsg.value;
        const nickname = onlineUsers.find(({ id }) => socket.id.includes(id));
        // console.log(nickname);
        socket.emit('message', { chatMessage, nickname: nickname.name || nickname.id });
    }

    function saveNewNick() {
        const newNick = inputNick.value;
        socket.emit('updateNick', { newNick, id: socket.id });
        inputNick.value = '';
    }

    function removeAllChildrens() {
        const childrens = document.querySelectorAll('.userName');
        childrens.forEach((element) => usersOnline.removeChild(element));
    }

    function addUsersOnline(users) {
        onlineUsers = users;
        users.forEach(({ name, id }) => {
            const li = document.createElement('li');
            li.innerText = name || id;
            li.className = 'userName';
            li.setAttribute('data-testid', 'online-user');
            usersOnline.appendChild(li);
        });
    }

    socket.on('message', (menssage) => {
        const p = document.createElement('p');
        p.innerText = menssage;
        p.setAttribute('data-testid', 'message');
        ulChat.appendChild(p);
        inputMsg.value = '';
    });

    socket.on('updateOnlineUsers', (users) => {
        removeAllChildrens();
        
        const teste1 = users.filter((user) => !socket.id.includes(user.id));
        const teste2 = users.find((user) => socket.id.includes(user.id));

        teste1.unshift(teste2)

        
        addUsersOnline(teste1);
        
        // addUsersOnline(users);
    });

    btnSendMessage.addEventListener('click', sendNewMessage);
    btnSave.addEventListener('click', saveNewNick);
</script>

</html>
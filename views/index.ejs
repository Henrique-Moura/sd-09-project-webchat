<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="./public/style.css" />
    <title>t9ers webchat</title>
  </head>
  <body>
    <h1>t9ers webchat</h1>
    <main>
      <form>
        <input
          type="text"
          name="nickname"
          data-testid="nickname-box"
          placeholder="Insira seu nickname"
        />
        <button id="nickname-button" data-testid="nickname-button">
          salvar
        </button>
      </form>
      <div>
        <section>
          <h2>Usu√°rios online</h2>
          <ul id="online-users">
          </ul>
        </section>
        <section class="messages-container" id="messages-container">
        </section>
      </div>
      <form id="message-form">
        <input
          type="text"
          name="message"
          data-testid="message-box"
          placeholder="Escreva sua mensagem"
        />
        <button type="submit" data-testid="send-button">enviar</button>
      </form>
    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = window.io();
      
      const renderMessage = (message) => {
        document.querySelector('#messages-container').insertAdjacentHTML('beforeend', `<div data-testid="message"> ${message} </div>`);
      };

      //renderiza as mensagens do array messages
      socket.on('previousMessages', (messages) => {
        for (message of messages) {
          renderMessage(message);
        };
      });

      const renderOnlineUsers = (client) => {
        document.querySelector('#online-users').insertAdjacentHTML('beforeend', `<li data-testid="online-user"> ${client} </li>`)
      };

      socket.on('randomId', (id) => {
        renderOnlineUsers(id);
        document.querySelector('input[name=nickname]').value = id;
      });

      socket.on('onlineClients', (clients) => {
        for (client in clients) {
          renderOnlineUsers(client);
        };
      });

      // renderiza a mensagem enviada para todos conectados
      socket.on('sentMessages', (message) => {
        renderMessage(message);
      });

      document.querySelector('#nickname-button').addEventListener('click', () => {
        const nickname = document.querySelector('input[name=nickname]').value;
        socket.emit('customNickname', nickname);
      })
      
      document.querySelector('#message-form').addEventListener('submit', (e) => {
        e.preventDefault();
        const nickname = document.querySelector('input[name=nickname]').value;
        const chatMessage = document.querySelector('input[name=message]').value;
        if (nickname && chatMessage) {
          socket.emit('message', { nickname, chatMessage });
        };
      });

      window.onbeforeunload = function(event) {
        socket.disconnect();
      };
    </script>
  </body>
</html>
